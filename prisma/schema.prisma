generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  password  String
  name      String
  avatar    Int?
  bio       String?
  role      Role      @default(USER)
  Product   Product[] @relation("ProductToUser")
  Review    Review[]  @relation("ReviewToUser")

  Order Order[]
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  price       Float?
  image       String?
  weight      Float?
  dimensions  String?
  rating      Float?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  categories  Category[] @relation("CategoryToProduct")
  reviews     Review[]   @relation("ProductToReview")
  user        User[]     @relation("ProductToUser")

  PharmacyProduct PharmacyProduct[]

  Order Order[]
}

model Review {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  body      String
  rating    Int
  product   Product[] @relation("ProductToReview")
  user      User[]    @relation("ReviewToUser")
}

model Pharmacy {
  id            Int @id @default(autoincrement())
  geolocationId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  phone       String
  email       String
  image       String?

  geolocation     geolocation       @relation(fields: [geolocationId], references: [id])
  PharmacyProduct PharmacyProduct[]
}

model geolocation {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  latitude   Float
  longitude  Float
  address    String
  additional String
  cep        String
  city       String
  Pharmacy   Pharmacy[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[] @relation("CategoryToProduct")
}

model Order {
  id        String @id @default(uuid())
  userId    Int
  productId Int

  quantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])
}

model PharmacyProduct {
  pharmacyId Int
  productId  Int
  quantity   Int

  pharmacy Pharmacy @relation(fields: [pharmacyId], references: [id])
  product  Product  @relation(fields: [productId], references: [id])

  @@id([pharmacyId, productId])
}

enum Role {
  ADMIN
  USER
}
